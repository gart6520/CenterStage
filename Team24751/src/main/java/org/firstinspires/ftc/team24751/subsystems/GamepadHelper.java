package org.firstinspires.ftc.team24751.subsystems;

import com.qualcomm.robotcore.hardware.Gamepad;

public class GamepadHelper {
    // Gamepad states
    public Gamepad gamepad = null;
    public Gamepad prev_gp = new Gamepad();
    public Gamepad curr_gp = new Gamepad();

    // Button rising edge/falling edge booleans
    // This stuff is generated by a script, I'm not crazy to type these things by hand
    /**
     * dpad up
     */
    public volatile boolean dpad_up_just_pressed = false;
    public volatile boolean dpad_up_just_released = false;

    /**
     * dpad down
     */
    public volatile boolean dpad_down_just_pressed = false;
    public volatile boolean dpad_down_just_released = false;

    /**
     * dpad left
     */
    public volatile boolean dpad_left_just_pressed = false;
    public volatile boolean dpad_left_just_released = false;

    /**
     * dpad right
     */
    public volatile boolean dpad_right_just_pressed = false;
    public volatile boolean dpad_right_just_released = false;

    /**
     * button a
     */
    public volatile boolean a_just_pressed = false;
    public volatile boolean a_just_released = false;

    /**
     * button b
     */
    public volatile boolean b_just_pressed = false;
    public volatile boolean b_just_released = false;

    /**
     * button x
     */
    public volatile boolean x_just_pressed = false;
    public volatile boolean x_just_released = false;

    /**
     * button y
     */
    public volatile boolean y_just_pressed = false;
    public volatile boolean y_just_released = false;

    /**
     * button guide - often the large button in the middle of the controller. The OS may
     * capture this button before it is sent to the app; in which case you'll never
     * receive it.
     */
    public volatile boolean guide_just_pressed = false;
    public volatile boolean guide_just_released = false;

    /**
     * button start
     */
    public volatile boolean start_just_pressed = false;
    public volatile boolean start_just_released = false;

    /**
     * button back
     */
    public volatile boolean back_just_pressed = false;
    public volatile boolean back_just_released = false;

    /**
     * button left bumper
     */
    public volatile boolean left_bumper_just_pressed = false;
    public volatile boolean left_bumper_just_released = false;

    /**
     * button right bumper
     */
    public volatile boolean right_bumper_just_pressed = false;
    public volatile boolean right_bumper_just_released = false;

    /**
     * left stick button
     */
    public volatile boolean left_stick_button_just_pressed = false;
    public volatile boolean left_stick_button_just_released = false;

    /**
     * right stick button
     */
    public volatile boolean right_stick_button_just_pressed = false;
    public volatile boolean right_stick_button_just_released = false;

    /**
     * PS4 Support - Circle
     */
    public volatile boolean circle_just_pressed = false;
    public volatile boolean circle_just_released = false;

    /**
     * PS4 Support - cross
     */
    public volatile boolean cross_just_pressed = false;
    public volatile boolean cross_just_released = false;

    /**
     * PS4 Support - triangle
     */
    public volatile boolean triangle_just_pressed = false;
    public volatile boolean triangle_just_released = false;

    /**
     * PS4 Support - square
     */
    public volatile boolean square_just_pressed = false;
    public volatile boolean square_just_released = false;

    /**
     * PS4 Support - share
     */
    public volatile boolean share_just_pressed = false;
    public volatile boolean share_just_released = false;

    /**
     * PS4 Support - options
     */
    public volatile boolean options_just_pressed = false;
    public volatile boolean options_just_released = false;

    /**
     * This class is created to make gamepad programming easier
     * @param gamepad your gamepad. Create multiple instances of this class for more gamepads
     */
    public GamepadHelper(Gamepad gamepad) {
        this.gamepad = gamepad;
    }

    /**
     * Init the gamepad helper class
     * This method calls to update() method
     */
    public void init() {
        update();
    }

    /**
     * Update the gamepad states
     */
    public void update() {
        // Update the last gamepad states
        prev_gp.copy(curr_gp);

        // Update the new gamepad states
        curr_gp.copy(gamepad);

        // Update button state variables
        // This stuff is generated by a script, I'm not crazy to type these things by hand
        a_just_pressed = curr_gp.a && !prev_gp.a;
        a_just_released = !curr_gp.a && prev_gp.a;
        b_just_pressed = curr_gp.b && !prev_gp.b;
        b_just_released = !curr_gp.b && prev_gp.b;
        x_just_pressed = curr_gp.x && !prev_gp.x;
        x_just_released = !curr_gp.x && prev_gp.x;
        y_just_pressed = curr_gp.y && !prev_gp.y;
        y_just_released = !curr_gp.y && prev_gp.y;
        guide_just_pressed = curr_gp.guide && !prev_gp.guide;
        guide_just_released = !curr_gp.guide && prev_gp.guide;
        start_just_pressed = curr_gp.start && !prev_gp.start;
        start_just_released = !curr_gp.start && prev_gp.start;
        back_just_pressed = curr_gp.back && !prev_gp.back;
        back_just_released = !curr_gp.back && prev_gp.back;
        left_bumper_just_pressed = curr_gp.left_bumper && !prev_gp.left_bumper;
        left_bumper_just_released = !curr_gp.left_bumper && prev_gp.left_bumper;
        right_bumper_just_pressed = curr_gp.right_bumper && !prev_gp.right_bumper;
        right_bumper_just_released = !curr_gp.right_bumper && prev_gp.right_bumper;
        left_stick_button_just_pressed = curr_gp.left_stick_button && !prev_gp.left_stick_button;
        left_stick_button_just_released = !curr_gp.left_stick_button && prev_gp.left_stick_button;
        right_stick_button_just_pressed = curr_gp.right_stick_button && !prev_gp.right_stick_button;
        right_stick_button_just_released = !curr_gp.right_stick_button && prev_gp.right_stick_button;
        circle_just_pressed = curr_gp.circle && !prev_gp.circle;
        circle_just_released = !curr_gp.circle && prev_gp.circle;
        cross_just_pressed = curr_gp.cross && !prev_gp.cross;
        cross_just_released = !curr_gp.cross && prev_gp.cross;
        triangle_just_pressed = curr_gp.triangle && !prev_gp.triangle;
        triangle_just_released = !curr_gp.triangle && prev_gp.triangle;
        square_just_pressed = curr_gp.square && !prev_gp.square;
        square_just_released = !curr_gp.square && prev_gp.square;
        share_just_pressed = curr_gp.share && !prev_gp.share;
        share_just_released = !curr_gp.share && prev_gp.share;
        options_just_pressed = curr_gp.options && !prev_gp.options;
        options_just_released = !curr_gp.options && prev_gp.options;
    }
}
